{"ast":null,"code":"var _jsxFileName = \"/home/cryptokowsik/Desktop/Lottery-Dapp/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../web3.js';\nimport Lottery from '../ethereum/build/contracts/Lottery.json';\nimport Error from './_error.js';\nimport LotteryInstance from '../instance.js';\nimport { Form, Message, Button } from 'semantic-ui-react';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      errorMessage: '',\n      enteredAmount: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      this.setState({\n        loading: true\n      });\n\n      try {\n        await LotteryInstance.methods.enter().send({\n          from: this.props.accounts[0],\n          value: event.target.value\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    });\n  }\n\n  static async getInitialProps() {\n    let errorOccured = false;\n    let accounts, manager;\n\n    try {\n      accounts = await web3.eth.getAccounts();\n      manager = await LotteryInstance.methods.manager().call();\n    } catch (err) {\n      console.log(err);\n      errorOccured = true;\n    }\n\n    return {\n      accounts,\n      manager,\n      errorOccured\n    };\n  }\n\n  render() {\n    const {\n      accounts,\n      manager,\n      errorOccured\n    } = this.props;\n\n    if (errorOccured) {\n      return __jsx(Error, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 20\n        }\n      });\n    }\n\n    console.log(accounts);\n    return __jsx(Layout, {\n      accounts: accounts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"Manager : \", manager), __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"Contract address : \", LotteryInstance.options.address), __jsx(Form, {\n      error: !!this.state.errorMessage,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, __jsx(Form.Input, {\n      label: \"Enter Amount in wei\",\n      placeholder: \"Enter Ammount\",\n      value: this.state.enteredAmount,\n      name: \"enteredAmount\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    })), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      color: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"Enter\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/cryptokowsik/Desktop/Lottery-Dapp/pages/index.js"],"names":["React","Component","Layout","web3","Lottery","Error","LotteryInstance","Form","Message","Button","App","errorMessage","enteredAmount","loading","event","setState","methods","enter","send","from","props","accounts","value","target","err","message","name","getInitialProps","errorOccured","manager","eth","getAccounts","call","console","log","render","options","address","state","onSubmit","handleChange"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../web3.js';\nimport Lottery from '../ethereum/build/contracts/Lottery.json';\nimport Error from './_error.js'\nimport LotteryInstance from '../instance.js';\nimport {Form,Message,Button} from 'semantic-ui-react';\nclass App extends Component{\n    state={\n        errorMessage : '',\n        enteredAmount:'',\n        loading:false\n    }\n    static async getInitialProps(){\n        let errorOccured = false;\n        let accounts,manager\n        try{\n            accounts = await web3.eth.getAccounts();\n            manager = await LotteryInstance.methods.manager().call();\n        }catch(err){\n              console.log(err);\n              errorOccured=true;\n        }\n        return {accounts,manager,errorOccured};\n    }\n    onSubmit = async (event) =>{\n        this.setState({loading:true})\n        try{\n            await LotteryInstance.methods.enter()\n            .send({from:this.props.accounts[0], value:event.target.value})\n        }catch(err){\n            this.setState({errorMessage:err.message});\n        }\n        this.setState({loading:false})\n    }\n    handleChange=(event)=>{\n        this.setState({[event.target.name]:event.target.value});\n    }\n    render(){\n        const {accounts,manager,errorOccured} = this.props;\n        if(errorOccured){\n            return <Error />\n        }\n        console.log(accounts)\n        return(\n            <Layout accounts={accounts}>\n                <h2>Manager : {manager}</h2>\n                <h3>Contract address : {LotteryInstance.options.address}</h3>\n                <Form error={!!this.state.errorMessage} onSubmit={this.onSubmit}>\n                    <Form.Field>\n                        <Form.Input \n                        label='Enter Amount in wei'\n                        placeholder='Enter Ammount' \n                        value={this.state.enteredAmount}\n                        name=\"enteredAmount\"\n                        onChange={this.handleChange}\n                        />\n                    </Form.Field>\n                    <Message error header=\"Oops!\" content={this.state.errorMessage} />\n                    <Button loading={this.state.loading} color=\"green\">Enter</Button>\n                </Form>\n            </Layout>\n                \n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}