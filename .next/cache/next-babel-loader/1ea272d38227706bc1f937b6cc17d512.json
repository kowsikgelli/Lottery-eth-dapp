{"ast":null,"code":"var _jsxFileName = \"/home/cryptokowsik/Desktop/Lottery-Dapp/components/Enter.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport LotteryInstance from '../instance';\nimport web3 from '../web3';\nimport { Form, Message, Button, Input } from 'semantic-ui-react';\n\nclass Enter extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      players: [],\n      balanceInPool: '',\n      etneredAmount: '',\n      loading: false,\n      errorMessage: ''\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      try {\n        let accounts = await web3.eth.getAccounts();\n        await LotteryInstance.methods.enter().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.enteredAmount, 'ether')\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const players = await LotteryInstance.methods.getPlayers().call();\n    const balanceInPool = await LotteryInstance.methods.balanceInPool().call();\n    this.setState({\n      players,\n      balanceInPool\n    });\n  }\n\n  render() {\n    const {\n      players,\n      balanceInPool\n    } = this.state;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, players.length, \" bids are entered\"), __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Blance in pool : \", web3.utils.fromWei(balanceInPool, 'ether'), \" Eth\"), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }), __jsx(Form, {\n      error: !!this.state.errorMessage,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, __jsx(Input, {\n      label: {\n        basic: true,\n        content: 'ETH'\n      },\n      labelPosition: \"right\",\n      placeholder: \"Enter Bid Amount\",\n      value: this.state.enteredAmount,\n      name: \"enteredAmount\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    })), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      color: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"Enter\")), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }), __jsx(Message, {\n      header: \"Only Manger can pick the winner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }), __jsx(Button, {\n      content: \"Pick winner\",\n      icon: \"add circle\",\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Enter;","map":{"version":3,"sources":["/home/cryptokowsik/Desktop/Lottery-Dapp/components/Enter.js"],"names":["React","LotteryInstance","web3","Form","Message","Button","Input","Enter","Component","players","balanceInPool","etneredAmount","loading","errorMessage","event","setState","target","name","value","preventDefault","accounts","eth","getAccounts","methods","enter","send","from","utils","toWei","state","enteredAmount","err","message","componentDidMount","getPlayers","call","render","length","fromWei","onSubmit","basic","content","handleChange"],"mappings":"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","sourcesContent":["import React from 'react'\nimport LotteryInstance from '../instance';\nimport web3 from '../web3'\nimport {Form,Message,Button,Input} from 'semantic-ui-react';\nclass Enter extends React.Component{\n    state={\n        players:[],\n        balanceInPool:'',\n        etneredAmount:'',\n        loading:false,\n        errorMessage:''\n    }\n    async componentDidMount(){\n        const players = await LotteryInstance.methods.getPlayers().call();\n        const balanceInPool = await LotteryInstance.methods.balanceInPool().call();\n        this.setState({players,balanceInPool})\n    }\n    handleChange=(event)=>{\n        this.setState({[event.target.name]:event.target.value});\n    }\n    onSubmit = async(event)=>{\n        event.preventDefault();\n        this.setState({loading:true})\n        try{\n            let accounts = await web3.eth.getAccounts()\n            await LotteryInstance.methods.enter()\n            .send({from:accounts[0],value:web3.utils.toWei(this.state.enteredAmount,'ether')})\n        }catch(err){\n            this.setState({errorMessage:err.message})\n        }\n        this.setState({loading:false})\n    }\n    render(){\n        const {players,balanceInPool} = this.state\n        return(\n            <div>\n                <h4>{players.length} bids are entered</h4>\n                <h4>Blance in pool : {web3.utils.fromWei(balanceInPool,'ether')} Eth</h4>\n                <hr />\n                <Form error={!!this.state.errorMessage} onSubmit={this.onSubmit}>\n                    <Form.Field>\n                        <Input \n                        label={{ basic: true, content: 'ETH' }}\n                        labelPosition='right'\n                        placeholder='Enter Bid Amount' \n                        value={this.state.enteredAmount}\n                        name=\"enteredAmount\"\n                        onChange={this.handleChange}\n                        />\n                    </Form.Field>\n                    <Message error header=\"Oops!\" content={this.state.errorMessage} />\n                    <Button loading={this.state.loading} color=\"green\">Enter</Button>\n                </Form>\n                <hr />\n                <br />\n                <Message\n                    \n                    header='Only Manger can pick the winner'\n                    \n                />\n                <Button\n                content=\"Pick winner\"\n                icon=\"add circle\"\n                primary\n              />\n            </div>\n        )\n    }\n}\nexport default Enter"]},"metadata":{},"sourceType":"module"}