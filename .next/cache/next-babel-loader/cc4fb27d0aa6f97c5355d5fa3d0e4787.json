{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/cryptokowsik/Desktop/Lottery-Dapp/components/Enter.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport LotteryInstance from '../instance';\nimport web3 from '../web3';\nimport { Form, Message, Button } from 'semantic-ui-react';\n\nvar Enter = /*#__PURE__*/function (_React$Component) {\n  _inherits(Enter, _React$Component);\n\n  var _super = _createSuper(Enter);\n\n  function Enter() {\n    var _this;\n\n    _classCallCheck(this, Enter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      players: [],\n      balanceInPool: '',\n      etneredAmount: '',\n      loading: false,\n      errorMessage: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  loading: true\n                });\n\n                _context.prev = 2;\n                _context.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context.sent;\n                _context.next = 8;\n                return LotteryInstance.methods.enter().send({\n                  from: accounts[0],\n                  value: web3.utils.toWei(_this.state.enteredAmount, 'ether')\n                });\n\n              case 8:\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](2);\n\n                _this.setState({\n                  errorMessage: _context.t0.message\n                });\n\n              case 13:\n                _this.setState({\n                  loading: false\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(Enter, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var players, balanceInPool;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return LotteryInstance.methods.getPlayers().call();\n\n              case 2:\n                players = _context2.sent;\n                _context2.next = 5;\n                return LotteryInstance.methods.balanceInPool().call();\n\n              case 5:\n                balanceInPool = _context2.sent;\n                this.setState({\n                  players: players,\n                  balanceInPool: balanceInPool\n                });\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          players = _this$state.players,\n          balanceInPool = _this$state.balanceInPool;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        floated: \"right\",\n        content: \"Pick winner\",\n        icon: \"add circle\",\n        primary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }), __jsx(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, players.length, \" bids are entered\"), __jsx(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, \"Blance in pool : \", web3.utils.fromWei(balanceInPool, 'ether'), \" Eth\"), __jsx(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }), __jsx(Form, {\n        error: !!this.state.errorMessage,\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, __jsx(Form.Input, {\n        label: \"Enter Amount in Eth\",\n        placeholder: \"Emter Bid Amount\",\n        value: this.state.enteredAmount,\n        name: \"enteredAmount\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      })), __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        color: \"green\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, \"Confirm\")), __jsx(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Enter;\n}(React.Component);\n\nexport default Enter;","map":{"version":3,"sources":["/home/cryptokowsik/Desktop/Lottery-Dapp/components/Enter.js"],"names":["React","LotteryInstance","web3","Form","Message","Button","Enter","players","balanceInPool","etneredAmount","loading","errorMessage","event","setState","target","name","value","preventDefault","eth","getAccounts","accounts","methods","enter","send","from","utils","toWei","state","enteredAmount","message","getPlayers","call","length","fromWei","onSubmit","handleChange","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport LotteryInstance from '../instance';\nimport web3 from '../web3'\nimport {Form,Message,Button} from 'semantic-ui-react';\nclass Enter extends React.Component{\n    state={\n        players:[],\n        balanceInPool:'',\n        etneredAmount:'',\n        loading:false,\n        errorMessage:''\n    }\n    async componentDidMount(){\n        const players = await LotteryInstance.methods.getPlayers().call();\n        const balanceInPool = await LotteryInstance.methods.balanceInPool().call();\n        this.setState({players,balanceInPool})\n    }\n    handleChange=(event)=>{\n        this.setState({[event.target.name]:event.target.value});\n    }\n    onSubmit = async(event)=>{\n        event.preventDefault();\n        this.setState({loading:true})\n        try{\n            let accounts = await web3.eth.getAccounts()\n            await LotteryInstance.methods.enter()\n            .send({from:accounts[0],value:web3.utils.toWei(this.state.enteredAmount,'ether')})\n        }catch(err){\n            this.setState({errorMessage:err.message})\n        }\n        this.setState({loading:false})\n    }\n    render(){\n        const {players,balanceInPool} = this.state\n        return(\n            <div>\n                <Button\n                floated=\"right\"\n                content=\"Pick winner\"\n                icon=\"add circle\"\n                primary\n              />\n                <h4>{players.length} bids are entered</h4>\n                <h4>Blance in pool : {web3.utils.fromWei(balanceInPool,'ether')} Eth</h4>\n                <hr />\n                <Form error={!!this.state.errorMessage} onSubmit={this.onSubmit}>\n                    <Form.Field>\n                        <Form.Input \n                        label='Enter Amount in Eth'\n                        placeholder='Emter Bid Amount' \n                        value={this.state.enteredAmount}\n                        name=\"enteredAmount\"\n                        onChange={this.handleChange}\n                        />\n                    </Form.Field>\n                    <Message error header=\"Oops!\" content={this.state.errorMessage} />\n                    <Button loading={this.state.loading} color=\"green\">Confirm</Button>\n                </Form>\n                <hr />\n            </div>\n        )\n    }\n}\nexport default Enter"]},"metadata":{},"sourceType":"module"}