{"ast":null,"code":"var _jsxFileName = \"/home/cryptokowsik/Desktop/Lottery-Dapp/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../web3.js';\nimport Lottery from '../ethereum/build/contracts/Lottery.json';\nimport Error from './_error.js';\nimport LotteryInstance from '../instance.js';\nimport { Form, Message } from 'semantic-ui-react';\n\nclass App extends Component {\n  static async getInitialProps() {\n    let errorOccured = false;\n    let accounts, manager;\n\n    try {\n      accounts = await web3.eth.getAccounts();\n      manager = await LotteryInstance.methods.manager().call();\n    } catch (err) {\n      console.log(err);\n      errorOccured = true;\n    }\n\n    return {\n      accounts,\n      manager,\n      errorOccured\n    };\n  }\n\n  render() {\n    const {\n      accounts,\n      manager,\n      errorOccured\n    } = this.props;\n\n    if (errorOccured) {\n      return __jsx(Error, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 20\n        }\n      });\n    }\n\n    console.log(accounts);\n    return __jsx(Layout, {\n      accounts: accounts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"Manager : \", manager), __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \"Contract address : \", LotteryInstance.options.address));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/cryptokowsik/Desktop/Lottery-Dapp/pages/index.js"],"names":["React","Component","Layout","web3","Lottery","Error","LotteryInstance","Form","Message","App","getInitialProps","errorOccured","accounts","manager","eth","getAccounts","methods","call","err","console","log","render","props","options","address"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,0CAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,eAAP,MAA4B,gBAA5B;AACA,SAAQC,IAAR,EAAaC,OAAb,QAA2B,mBAA3B;;AACA,MAAMC,GAAN,SAAkBR,SAAlB,CAA2B;AACvB,eAAaS,eAAb,GAA8B;AAC1B,QAAIC,YAAY,GAAG,KAAnB;AACA,QAAIC,QAAJ,EAAaC,OAAb;;AACA,QAAG;AACCD,MAAAA,QAAQ,GAAG,MAAMT,IAAI,CAACW,GAAL,CAASC,WAAT,EAAjB;AACAF,MAAAA,OAAO,GAAG,MAAMP,eAAe,CAACU,OAAhB,CAAwBH,OAAxB,GAAkCI,IAAlC,EAAhB;AACH,KAHD,CAGC,OAAMC,GAAN,EAAU;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAP,MAAAA,YAAY,GAAC,IAAb;AACL;;AACD,WAAO;AAACC,MAAAA,QAAD;AAAUC,MAAAA,OAAV;AAAkBF,MAAAA;AAAlB,KAAP;AACH;;AACDU,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACT,MAAAA,QAAD;AAAUC,MAAAA,OAAV;AAAkBF,MAAAA;AAAlB,QAAkC,KAAKW,KAA7C;;AACA,QAAGX,YAAH,EAAgB;AACZ,aAAO,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACDQ,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACA,WACI,MAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEA,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAeC,OAAf,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwBP,eAAe,CAACiB,OAAhB,CAAwBC,OAAhD,CAFJ,CADJ;AAOH;;AA1BsB;;AA6B3B,eAAef,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../web3.js';\nimport Lottery from '../ethereum/build/contracts/Lottery.json';\nimport Error from './_error.js'\nimport LotteryInstance from '../instance.js';\nimport {Form,Message} from 'semantic-ui-react';\nclass App extends Component{\n    static async getInitialProps(){\n        let errorOccured = false;\n        let accounts,manager\n        try{\n            accounts = await web3.eth.getAccounts();\n            manager = await LotteryInstance.methods.manager().call();\n        }catch(err){\n              console.log(err);\n              errorOccured=true;\n        }\n        return {accounts,manager,errorOccured};\n    }\n    render(){\n        const {accounts,manager,errorOccured} = this.props;\n        if(errorOccured){\n            return <Error />\n        }\n        console.log(accounts)\n        return(\n            <Layout accounts={accounts}>\n                <h2>Manager : {manager}</h2>\n                <h3>Contract address : {LotteryInstance.options.address}</h3>\n            </Layout>\n                \n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}